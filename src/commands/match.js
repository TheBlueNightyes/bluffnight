import { createCommandConfig, logger } from 'robo.js'

export const config = createCommandConfig({
	description: 'are you meant to be?',
	options: [{
		name: 'partner',
		description: 'is ts (this) rizz?',
		type: 'user',
		required: true
	}]
})

export default async (interaction) => {
	logger.info(`Match generated by ${interaction.user}`)
	await interaction.deferReply()
		const partner = interaction.options.getUser('partner');
		const responses25 = [
			"I'd reconsider.",
			"25"
		];

		const responses50 = [
			"Try someone uglier next time?",
			"50"
		];

		const responses75 = [
			"What is this rizz?",
			"75"
		];

		const responses100 = [
			"Your perfect!",
			"100",
		];
		
		const randomNumber = [Math.floor(Math.random() * 100 + 1)];
		const botResponse25 = responses25[Math.floor(Math.random() * responses25.length)];
		const botResponse50 = responses50[Math.floor(Math.random() * responses50.length)];
		const botResponse75 = responses75[Math.floor(Math.random() * responses75.length)];
		const botResponse100 = responses100[Math.floor(Math.random() * responses100.length)];
		const message = await interaction.editReply({
			content: `nah > ${partner}\n${randomNumber}\n${botResponse25}`,
		})

		const marriageResult = message.createMessageComponentCollector({
			filter: (i) => i.customId === 'accept' || i.customId === 'object',
		})

		marriageResult.on('collect', async (i) => {

		if (randomNumber <= 25) {
			await interaction.editReply({
				content: `> ${partner}\n${responses25}\n${botResponse25}`,
			});
		return;
		}

		if (randomNumber <= 50) {
			await interaction.editReply({
				content: `> ${partner}\n${randomNumber}\n${botResponse50}`,
			});
		return;
		}

		if (randomNumber <= 75) {
			await interaction.editReply({
				content: `> ${partner}\n${randomNumber}\n${botResponse75}`,
			});
		return;
		}

		if (randomNumber == 100) {
			await interaction.editReply({
				content: `> ${partner}\n${randomNumber}\n${botResponse100}`,
			});
		return;
		}
})};